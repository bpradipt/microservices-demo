---
apiVersion: v1
kind: Namespace
metadata:
  name: sock-shop
---
apiVersion: v1
kind: Namespace
metadata:
  name: zipkin
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts-db
  labels:
    name: carts-db
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: carts-db
    spec:
      containers:
      - name: carts-db
        image: mycluster.icp:8500/sockshop/mongo:3.5
        ports:
        - name: mongo
          containerPort: 27017
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  labels:
    name: carts-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: carts-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: carts
    spec:
      containers:
      - name: carts
        image: mycluster.icp:8500/sockshop/carts:0.4.8
        ports:
         - containerPort: 80
        env:
         - name: ZIPKIN
           value: zipkin.zipkin.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    name: carts
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: carts
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - name: catalogue-db
        image: mycluster.icp:8500/sockshop/catalogue-db:0.3.0
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          - name: MYSQL_DATABASE
            value: socksdb
        ports:
        - name: mysql
          containerPort: 3306
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue
  labels:
    name: catalogue
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: catalogue
    spec:
      containers:
      - name: catalogue
        image: mycluster.icp:8500/sockshop/catalogue-ppc64le
        env:
          - name: ZIPKIN
            value: http://zipkin.zipkin.svc.cluster.local:9411/api/v1/spans
        ports:
        - containerPort: 80
      nodeSelector:
        beta.kubernetes.io/arch: ppc64le
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    name: catalogue
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: catalogue
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front-end
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: front-end
    spec:
      containers:
      - name: front-end
        image: mycluster.icp:8500/sockshop/front-end:0.3.12
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8079
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    name: front-end
  namespace: sock-shop
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8079
    nodePort: 30001
  selector:
    name: front-end
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders-db
  labels:
    name: orders-db
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orders-db
    spec:
      containers:
      - name: orders-db
        image: mycluster.icp:8500/sockshop/mongo:3.5
        ports:
        - name: mongo
          containerPort: 27017
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  labels:
    name: orders-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: orders-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders
  labels:
    name: orders
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orders
    spec:
      containers:
      - name: orders
        image: mycluster.icp:8500/sockshop/orders:0.4.7
        env:
         - name: ZIPKIN
           value: zipkin.zipkin.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    name: orders
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: orders
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: payment
  labels:
    name: payment
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: payment
    spec:
      containers:
      - name: payment
        image: mycluster.icp:8500/sockshop/payment:0.4.3
        ports:
        - containerPort: 80
        env:
        - name: ZIPKIN
          value: http://zipkin.zipkin.svc.cluster.local:9411/api/v1/spans
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    name: payment
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: payment
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: queue-master
  labels:
    name: queue-master
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: queue-master
    spec:
      containers:
      - name: queue-master
        image: mycluster.icp:8500/sockshop/queue-master:0.3.1
        ports:
        - containerPort: 80
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  labels:
    name: queue-master
  annotations:
    prometheus.io/path: "/prometheus"
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: queue-master
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: mycluster.icp:8500/sockshop/rabbitmq:3
        ports:
        - containerPort: 5672
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 5672
    targetPort: 5672
  selector:
    name: rabbitmq
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: shipping
  labels:
    name: shipping
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: shipping
    spec:
      containers:
      - name: shipping
        image: mycluster.icp:8500/sockshop/shipping:0.4.8
        env:
         - name: ZIPKIN
           value: zipkin.zipkin.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    name: shipping
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: shipping
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user-db
  labels:
    name: user-db
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - name: user-db
        image: mycluster.icp:8500/sockshop/user-db:0.4.0
        ports:
        - name: mongo
          containerPort: 27017
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  labels:
    name: user-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
  selector:
    name: user-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
  labels:
    name: user
  namespace: sock-shop
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: user
    spec:
      containers:
      - name: user
        image: mycluster.icp:8500/sockshop/user:0.4.4
        ports:
        - containerPort: 80
        env:
        - name: MONGO_HOST
          value: user-db:27017
        - name: ZIPKIN
          value: http://zipkin.zipkin.svc.cluster.local:9411/api/v1/spans
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    name: user
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
  selector:
    name: user
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zipkin
  labels:
    name: zipkin
  namespace: zipkin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zipkin
    spec:
      containers:
      - name: zipkin
        image: mycluster.icp:8500/sockshop/zipkin:2.3.1
        ports:
        - containerPort: 9411
        env:
        - name: STORAGE_TYPE
          value: mysql
        - name: MYSQL_HOST
          value: zipkin-mysql
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin
  labels:
    name: zipkin
  namespace: zipkin
spec:
  type: NodePort
  ports:
    # the port that this service should serve on
  - port: 9411
    targetPort: 9411
    nodePort: 30002
  selector:
    name: zipkin
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zipkin-mysql
  labels:
    name: zipkin-mysql
  namespace: zipkin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zipkin-mysql
    spec:
      containers:
      - name: zipkin-mysql
        image: mycluster.icp:8500/sockshop/zipkin-mysql:1.20.0
        ports:
        - name: mysql
          containerPort: 3306
      nodeSelector:
        beta.kubernetes.io/arch: amd64
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin-mysql
  labels:
    name: zipkin-mysql
  namespace: zipkin
spec:
  ports:
    # the port that this service should serve on
  - port: 3306
    targetPort: 3306
  selector:
    name: zipkin-mysql
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zipkin-cron
  labels:
    name: zipkin-cron
  namespace: zipkin
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zipkin-cron
    spec:
      containers:
      - name: zipkin-cron
        image: mycluster.icp:8500/sockshop/zipkin-dependencies:1.4.0
        env:
        - name: STORAGE_TYPE
          value: mysql
        - name: MYSQL_HOST
          value: zipkin-mysql
        - name: MYSQL_USER
          value: zipkin
        - name: MYSQL_PASS
          value: zipkin
        command: ["crond"]
        args: ["-f"]
      nodeSelector:
        beta.kubernetes.io/arch: amd64
